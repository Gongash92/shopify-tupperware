<section class="padding-top-md padding-y-lg@md height-100% max-height-100% bg-gradient-1" data-bg-animate="on">
	<div class="container max-width-adaptive-xl margin-y-xl">
		<div class="grid gap-sm" id="kolekcije">
			<div class="col-12">
				<div class="text-component text-center margin-bottom-lg">
					<h1>Sve stvari za vašu kuhinju na jednom mestu!</h1>
					<p>Naša najtoplija preporuka</p>
					<a class="btn btn--primary" href="/collections">Pogledaj sve proizvode</a>
				</div>
			</div>

			<template v-for="(upsell, index) in upsells">
				<div class="col-4@md" v-if="index < 3">
					<div class="prod-card padding-sm" style="background-color: white">
						<div class="padding-sm text-center">
							<a :href="upsell.product_url" class="text-decoration-none color-contrast-high">
								<h3 class="color-inherit" v-html="upsell.title"></h3>
							</a>

							<div class="margin-top-xs">
								<span class="prod-card__price" v-html="upsell.price_money"></span>
							</div>
						</div>
						<a class="prod-card__img-link" :href="upsell.product_url" aria-label="Description of the link">
							<figure class="prod-card__img">
								<img :src="upsell.image" :alt="uspell.altTag" />
							</figure>
						</a>
					</div>
				</div>
			</template>
		</div>
	</div>
</section>

<script>
	  const collectionCartOptionsOne = {
	    delimiters: ['${', '}'],
	    store,
// vracane objekta sa vrijednostima
	    data() {

	      return {

	        upsells: [

	          {% for product in collections['Novo'].products %}
	      {
	        title: "{{ product.title }}",
	          handle: "{{product.handle}}",
	            image: "{{ product.featured_image | | img_url: 'master' }}",
							altTag: "{{ image.alt | escape }}",
	              product_id: "{{product.id}}",
	                variant_id: "{{product.selected_or_first_available_variant.id}}",
	                  price_money: "{{ product.price | money }}",
	                    name_collection: "{{collection.title}}",
	                      product_url: "{{ product.url }}",
	      },
	      {% endfor %}

	]
	      }
	    },

		//poziva se sinhrono nakon kreiranja instance vrijednosti u korpi
	  created() {
	    store.dispatch('get_cart').then(() => this.loading = false);
	  },
			// vracanje vrijednosti globalne  korpe
	  computed: {
	    cart() {
	      return store.state.cart;
	    },
	  },
	  methods: {
		// dobijanje vrijednosti korpe
	    get_cart() {
	      $.get('/cart.js')
	        .then(response => JSON.parse(response))
	        .then(cart => {
	          this.set_cart(cart);

	        })

	    },
			// dodavanje u korpu
	    add_to_cart(id) {
	      store.dispatch('add_to_cart', id);
	      this.closeMiniCart();

	    },

	// manipulacija sa cart drawerom otvaranje na dodavanje i na klik zatvaranje
	    closeMiniCart() {

	      $('#cart-drawer-1').addClass('drawer--is-visible');
	      // $('.mini-cart .dropdown-menu').addClass('show');
	      $('#close-test').click(function () {
	        $("#cart-drawer-1").removeClass('drawer--is-visible');
	      });

	    }
	  }


	  };
		// naziv sekcije koja ide preo Vue mora biti jedinstvena	
	  const collectionCartPageOne = Vue.createApp(collectionCartOptionsOne)
	  collectionCartPageOne.mount('#kolekcije');
	  collectionCartPageOne.use(store);
</script>
